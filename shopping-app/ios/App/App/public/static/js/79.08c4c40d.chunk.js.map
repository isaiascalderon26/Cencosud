{"version":3,"sources":["../../../src/web.ts"],"names":["BarcodeScannerWeb","_WebPlugin","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_prepare","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","this","unimplemented","stop","_hideBackground","_callee2","_context2","_showBackground","_callee3","_context3","_startScan","_callee4","_options","_context4","_x","_startScanning","_callee5","_callback","_context5","_x2","_x3","_pauseScanning","_callee6","_context6","_resumeScanning","_callee7","_context7","_stopScan","_callee8","_context8","_x4","_checkPermission","_callee9","_context9","_x5","_openAppSettings","_callee10","_context10","_disableTorch","_callee11","_context11","_enableTorch","_callee12","_context12","_toggleTorch","_callee13","_context13","_getTorchState","_callee14","_context14","WebPlugin"],"mappings":"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","file":"static/js/79.08c4c40d.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  BarcodeScannerPlugin,\n  ScanOptions,\n  ScanResult,\n  CheckPermissionOptions,\n  CheckPermissionResult,\n  StopScanOptions,\n  TorchStateResult,\n} from './definitions';\n\nexport class BarcodeScannerWeb\n  extends WebPlugin\n  implements BarcodeScannerPlugin {\n  async prepare(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async hideBackground(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async showBackground(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async startScan(_options: ScanOptions): Promise<ScanResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async startScanning(_options: ScanOptions, _callback: any): Promise<string> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async pauseScanning(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async resumeScanning(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async stopScan(_options?: StopScanOptions): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async checkPermission(\n    _options: CheckPermissionOptions,\n  ): Promise<CheckPermissionResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async openAppSettings(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async disableTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async enableTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async toggleTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getTorchState(): Promise<TorchStateResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n"],"sourceRoot":""}