{"version":3,"sources":["../../../src/web.ts"],"names":["AppWeb","_WebPlugin","_inherits","_super","_createSuper","_this","_classCallCheck","call","handleVisibilityChange","data","isActive","document","hidden","notifyListeners","addEventListener","_createClass","key","value","this","unimplemented","_getInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","_getLaunchUrl","_callee2","_context2","abrupt","url","_getState","_callee3","_context3","_minimizeApp","_callee4","_context4","WebPlugin"],"mappings":"iNAIaA,EAAO,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAClB,SAAAA,IAAA,IAAAK,EAMI,OANJC,YAAA,KAAAN,IACEK,EAAAF,EAAAI,KAAA,OA4BMC,uBAAyB,WAC/B,IAAMC,EAAO,CACXC,UAA8B,IAApBC,SAASC,QAGrBP,EAAKQ,gBAAgB,iBAAkBJ,GACnCE,SAASC,OACXP,EAAKQ,gBAAgB,QAAS,MAE9BR,EAAKQ,gBAAgB,SAAU,KAEnC,EAtCEF,SAASG,iBACP,mBACAT,EAAKG,wBACL,GACAH,CACJ,CAoBC,OApBAU,YAAAf,EAAA,EAAAgB,IAAA,UAAAC,MAED,WACE,MAAMC,KAAKC,cAAc,0BAC3B,GAAC,CAAAH,IAAA,UAAAC,MAAA,eAAAG,EAAAC,YAAAC,cAAAC,MAED,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACQV,KAAKC,cAAc,2BAA0B,wBAAAO,EAAAG,OAAA,GAAAL,EAAA,UACpD,yBAAAJ,EAAAU,MAAA,KAAAC,UAAA,EAJA,IAIA,CAAAf,IAAA,eAAAC,MAAA,eAAAe,EAAAX,YAAAC,cAAAC,MAED,SAAAU,IAAA,OAAAX,cAAAG,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAC,OAAA,SACS,CAAEC,IAAK,KAAI,wBAAAF,EAAAL,OAAA,GAAAI,EAAA,KACnB,yBAAAD,EAAAF,MAAA,KAAAC,UAAA,EAJA,IAIA,CAAAf,IAAA,WAAAC,MAAA,eAAAoB,EAAAhB,YAAAC,cAAAC,MAED,SAAAe,IAAA,OAAAhB,cAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAJ,OAAA,SACS,CAAEzB,UAA8B,IAApBC,SAASC,SAAiB,wBAAA2B,EAAAV,OAAA,GAAAS,EAAA,KAC9C,yBAAAD,EAAAP,MAAA,KAAAC,UAAA,EAJA,IAIA,CAAAf,IAAA,cAAAC,MAAA,eAAAuB,EAAAnB,YAAAC,cAAAC,MAED,SAAAkB,IAAA,OAAAnB,cAAAG,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,aACQV,KAAKC,cAAc,2BAA0B,wBAAAuB,EAAAb,OAAA,GAAAY,EAAA,UACpD,yBAAAD,EAAAV,MAAA,KAAAC,UAAA,EAJA,MAIA/B,CAAA,CA5BiB,C,MAAQ2C,E","file":"static/js/83.79714e18.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AppInfo, AppPlugin, AppLaunchUrl, AppState } from './definitions';\n\nexport class AppWeb extends WebPlugin implements AppPlugin {\n  constructor() {\n    super();\n    document.addEventListener(\n      'visibilitychange',\n      this.handleVisibilityChange,\n      false,\n    );\n  }\n\n  exitApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getInfo(): Promise<AppInfo> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getLaunchUrl(): Promise<AppLaunchUrl> {\n    return { url: '' };\n  }\n\n  async getState(): Promise<AppState> {\n    return { isActive: document.hidden !== true };\n  }\n\n  async minimizeApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  private handleVisibilityChange = () => {\n    const data = {\n      isActive: document.hidden !== true,\n    };\n\n    this.notifyListeners('appStateChange', data);\n    if (document.hidden) {\n      this.notifyListeners('pause', null);\n    } else {\n      this.notifyListeners('resume', null);\n    }\n  };\n}\n"],"sourceRoot":""}